@model Chamsoc.Controllers.SeniorsController.SeniorProfileViewModel

@{
    ViewData["Title"] = "Thông tin người cần chăm sóc";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-primary text-white py-3">
                    <h4 class="mb-0">
                        <i class="fas fa-user-circle me-2"></i>Thông tin chi tiết
                    </h4>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <img src="@(string.IsNullOrEmpty(Model.AvatarUrl) ? "/images/default-avatar.png" : Model.AvatarUrl)" 
                             class="rounded-circle img-thumbnail" 
                             style="width: 150px; height: 150px; object-fit: cover;" 
                             alt="@Model.Name" />
                        <h3 class="mt-3">@Model.Name</h3>
                        @if (Model.IsVerified)
                        {
                            <span class="badge bg-success">
                                <i class="fas fa-check-circle me-1"></i>Đã xác minh
                            </span>
                        }
                        <span class="badge @(Model.Status ? "bg-success" : "bg-warning") ms-2">
                            @(Model.Status ? "Đang hoạt động" : "Tạm nghỉ")
                        </span>
                    </div>

                    <div class="row g-4">
                        <div class="col-md-6">
                            <div class="info-group">
                                <label class="text-muted mb-1">
                                    <i class="fas fa-phone me-2"></i>Số điện thoại
                                </label>
                                <p class="mb-3">@Model.PhoneNumber</p>
                            </div>
                            <div class="info-group">
                                <label class="text-muted mb-1">
                                    <i class="fas fa-envelope me-2"></i>Email
                                </label>
                                <p class="mb-3">@Model.Email</p>
                            </div>
                            <div class="info-group">
                                <label class="text-muted mb-1">
                                    <i class="fas fa-map-marker-alt me-2"></i>Địa chỉ
                                </label>
                                <p class="mb-3">@Model.Address</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-group">
                                <label class="text-muted mb-1">
                                    <i class="fas fa-heart me-2"></i>Nhu cầu chăm sóc
                                </label>
                                <div class="mb-3">
                                    @foreach (var need in Model.CareNeeds.Split(','))
                                    {
                                        <span class="badge bg-info me-2 mb-2">@need.Trim()</span>
                                    }
                                </div>
                            </div>
                            <div class="info-group">
                                <label class="text-muted mb-1">
                                    <i class="fas fa-tag me-2"></i>Giá dịch vụ
                                </label>
                                <p class="mb-3 text-primary fw-bold">@Model.Price.ToString("N0") VNĐ/giờ</p>
                            </div>
                            <div class="info-group">
                                <label class="text-muted mb-1">
                                    <i class="fas fa-calendar me-2"></i>Ngày tham gia
                                </label>
                                <p class="mb-3">@Model.CreatedAt.ToString("dd/MM/yyyy")</p>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-center gap-3 mt-4">
                        <a href="@Url.Action("BookSenior", "Seniors", new { seniorId = Model.Id })" 
                           class="btn btn-primary">
                            <i class="fas fa-calendar-plus me-2"></i>Đặt lịch chăm sóc
                        </a>
                        <button class="btn btn-info" onclick="startCall('@Model.UserId')">
                            <i class="fas fa-phone me-2"></i>Gọi điện
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .info-group {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }

    .info-group label {
        font-weight: 500;
        color: #6c757d;
    }

    .info-group p {
        margin-bottom: 0;
        color: #212529;
    }

    .badge {
        padding: 0.5rem 1rem;
        font-weight: 500;
    }
</style>

@section Scripts {
    <script>
        async function startCall(userId) {
            try {
                const response = await fetch(`/api/call/start?targetUserId=${userId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    throw new Error('Không thể bắt đầu cuộc gọi');
                }

                const data = await response.json();
                if (data.success) {
                    console.log('Cuộc gọi đã bắt đầu');
                } else {
                    alert(data.message || 'Không thể bắt đầu cuộc gọi');
                }
            } catch (error) {
                console.error('Lỗi:', error);
                alert('Có lỗi xảy ra khi bắt đầu cuộc gọi');
            }
        }
    </script>
} 